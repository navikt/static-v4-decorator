////Mixins
//--------------------------------------------------

.clearfix() {
	&:before,
	&:after {
		content: " "; /* 1 */
		display: table; /* 2 */
	}
	&:after {
		clear: both;
	}
}

// WebKit-style focus
.tab-focus() {
	// Default
	outline: thin dotted #333;
	// WebKit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

// Center-align a block level element
.center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// RESPONSIVE IMAGE
// Keep images from scaling beyond the width of their parents.

.img-responsive(@display: block;) {
	display: @display;
	max-width: 100%; // Part 1: Set a maximum relative to the parent
	height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

// -------------------------
// Bullet point
// -------------------------
.bullet-point(@border-size, @border-color, @left, @top) {
	// Hvorfor har vi egentlig denne?
	// Svar: "bullet point" separering mellom lenker er noe som brukes
	// flere plasser og det krever en del css linjer, kan gjenbrukes her
	border: @border-size solid @border-color;
	border-radius: 50% 50% 50% 50%;
	content: " ";
	left: @left;
	top: @top;
	float: left;
	position: absolute;
	text-align: left;
}

// Down arrow (caret, dropdown)
// -------------------------

.down-arrow(@border-left, @border-right, @border-top, @color) {
	border-left: @border-left solid transparent;
	border-right: @border-right solid transparent;
	border-top: @border-top solid @color;
	content: "";
	display: inline-block;
	height: 0;
	width: 0;
	vertical-align: top;
}

// Up arrow
// -------------------------
.up-arrow(@border-bottom, @border-left, @border-right, @color) {
	border-bottom: @border-bottom solid @color;
	border-left: @border-left solid transparent;
	border-right: @border-right solid transparent;
	content: "";
	display: inline-block;
	height: 0;
	width: 0;
	vertical-align: top;
}

.mixin-transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}

.mixin-transform(@string) {
	-webkit-transform: @string;
	-moz-transform: @string;
	-ms-transform: @string;
	-o-transform: @string;
	transform: @string;
}

.mixin-transform-origin (@x:center, @y:center) {
	-webkit-transform-origin: @x @y;
	-moz-transform-origin: @x @y;
	-ms-transform-origin: @x @y;
	-o-transform-origin: @x @y;
	transform-origin: @x @y;
}

.mixin-nav-transition(@duration: 150ms, @type: all) {
	.mixin-transition(@type @duration cubic-bezier(0.465, 0.183, 0.153, 0.946))
}

.mixin-focus-outline(@width: 2px) {
	box-shadow: 0 0 0 @width @color-focus;
}

.mixin-nav-spinner(@storrelse: 1rem, @rammebredde: 2px) {
	width: @storrelse;
	height: @storrelse;
	border-top: @rammebredde solid @white;
	border-left: @rammebredde solid @white;
	border-bottom: @rammebredde solid rgba(255, 255, 255, .25);
	border-right: @rammebredde solid rgba(255, 255, 255, .25);
	border-radius: 50%;
	-webkit-transform: translateZ(0);
	-ms-transform: translateZ(0);
	transform: translateZ(0);
	-webkit-animation: rotering 800ms infinite linear;
	animation: rotering 800ms infinite linear;
}

@-webkit-keyframes rotering {
	from {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	to {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@keyframes rotering {
	from {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	to {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}
